[21.07.04]
회전에 대해서 고민하고 간단하게 보드판을 구현하였다.
[21.09.26]
보드판 위에 출력을 할 수 있도록 printBoard함수를 업데이트 했으며 goto_xy함수도 개발했다.
또한, 블록 생성 함수인 createBlock의 기초를 다졌다.
다음 개발에는 블록 배열을 어떻게 저장해놓을 것인지, 어떻게 활용할 것인지 고민할 필요가 있다.

[21.09.28]
각 미노의 초기값(모양)을 settingBlock()함수로 초기화 할 수 있도록 한 뒤 settingBoard에 추가하였다.
그리고, 현재 제어중인 블록이 없을 경우 무작위 블록을 생성하는 createBlock()함수를 완성하였다.
다음 개발에는 일정 시간이 지날 때 마다 블록이 내려오도록 하는 기능을 추가할 필요가 있다.
추가적으로, 알고리즘을 좀 더 연구한 뒤 개발에 들어갈 필요성이 느껴진다.

[21.09.29]
본격적으로 블록을 제어하기 위해 block값을 담은 blockQueue를 추가하였고, clock()함수를 이용해 일정 시간마다 블록이 떨어지도록 시간과 관련된 변수를 추가하였다.
fallingBlock()함수를 통해 일정 시간마다 소프트 드랍을 하게 하였고, softDrop()함수를 추가하여 소프트드랍이 가능하게 하였다.
또한, 블록 설치를 위해 simulationBoard를 추가하는 것을 고민해보았다.
일정 시간마다 블록이 떨어지는 것은 구현했으나, 블록 바로 밑 칸에 블록이 존재하는 경우 블록이 설치하는 것을 아직 구현하지 못했다.
다음 개발에는 블록 설치에 대해 구현할 필요가 있다.

누적 개발 시간 : 1h 7m

[21.10.05]
블록 설치를 메인으로 구현에 성공하였다.
이를 위해 블록의 상하좌우 이동을 미리 시뮬레이션해서 가능한지 불가능한지 판단하는 blockMoveSimulation함수를 구현하였고
4칸의 블록을 한번에 움직이기 위해 preloadBlockQueue 변수와 reloadBlock함수를 추가하였다.
이를 바탕으로 소프트 드랍 함수를 blockMoveSimulation함수와 reloadBlock함수로 더욱 직관성있고 효율적으로 변화시켰다.
또한, 소프트 드랍 함수에 블록 설치와 관련된 파트를 추가하여 블록 설치를 구현하였다.
이미 설치된 블록과 기존에 조종하던 블록에 차이점을 주기 위해 코드값 : 기존 블록코드 + 7를 설치된 블록의 코드로 지정하였다.

다음 개발에는 srand값의 시드값이 초당 바뀌는 한계점 때문에 같은 블록이 지속해서 나오는 경우를 수정해야한다.
또한, 실시간으로 입력 받는 것을 추가하여 좌우 방향키로 블록을 움직일 수 있도록 구현할 것이다.

누적 개발시간 : 2h 17m